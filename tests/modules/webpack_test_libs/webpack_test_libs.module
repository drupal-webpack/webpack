<?php

/**
 * Implements hook_page_attachments.
 */
function webpack_test_libs_page_attachments(array &$attachments) {
  /** @var \Drupal\webpack\LibrariesInspectorInterface $librariesInspector */
  $librariesInspector = \Drupal::service('webpack.libraries_inspector');
  // Attach the test libraries unconditionally .
  foreach ($librariesInspector->getAllWebpackLibraries() as $extension => $libraries) {
    foreach ($libraries as $libraryName => $library) {
      $attachments['#attached']['library'][] = "$extension/$libraryName";
    }
  }
}

/**
 * Implements hook_webpack_config_alter().
 *
 * @throws \Exception
 */
function webpack_test_libs_webpack_config_alter(&$config) {
  if (!isset($config['output']) || empty($config['output'])) {
    throw new \Exception('Output not found in webpack config.');
  }
}

/**
 * Implements hook_npm_working_dir_alter().
 */
function webpack_test_libs_npm_working_dir_alter(&$cwd) {
  $cwd = DRUPAL_ROOT;
}
